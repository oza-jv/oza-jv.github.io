// ------------------------------------------------------
// マウスクリックの練習　１０秒間で何回ヒットできるかな？
// ------------------------------------------------------
描画オン。

//描画キャンバスの初期設定
P＝描画中キャンバス。
MX＝描画中キャンバスの「width」をDOM属性取得。
MY＝描画中キャンバスの「height」をDOM属性取得。 

// グローバル変数の設定
TX=MX/2。TY=MY/2。		  // 的の初期位置（キャンバスの中央）
TR=15。TC=「#FFB6C1」。	// 的の半径，色（ピンク色）
TMV=25。				        // 的の移動量
得点＝０。
押数＝０。
処理可＝オフ。
押下フラグ＝オフ

// 画面やDOM要素の設定
「<B>マウスクリックの練習　10秒間追いかけろ！</B>」と書く。
「スタートを押すと，ピンクの的が移動します。的を追いかけて，マウスでクリックしよう。」と書く。

音OK＝「audio/poka.wav」を音追加。
音NG＝「audio/basi.wav」を音追加。
スタートボタン＝「▶ゲームスタート」のボタン作成。
停止ボタン＝「■ゲーム停止」のボタン作成。
改行作成。
改行作成。
結果ラベル＝「スタートボタンを押して始めよう！」のラベル作成。

// ボタンクリックのイベント設定
スタートボタンをクリックした時には
	結果ラベルに「がんばろう！」をテキスト設定。
	ゲームスタート。
ここまで。

停止ボタンをクリックした時には
	結果ラベルに「停止しました。」をテキスト設定。
	ゲームエンド。
ここまで。

// 的を描くサブルーチン設定
●的描く（XとYに）とは
	TCに塗色設定。
	1に線太設定。
	TCに線色設定。
	[X,Y]へTRの円描画。
ここまで。

●的消す（XとYの）とは
	白色に塗色設定。
	1に線太設定。
	灰色に線色設定。
	[X,Y]へTRの円描画。
ここまで。

●位置描く（XとYにCで）とは
	「#FFFFFF00」に塗色設定。
	3に線太設定。
	Cに線色設定。
	[X,Y]へTRの円描画。
ここまで。

// キャンバスを消す処理
●マップ消すとは
	[0,0,MX,MY]の描画クリア
	TX=MX/2。TY=MY/2。	// 的の初期位置
	TXとTYに的描く。
ここまで。

// ゲームスタートボタンを押した時の処理
●ゲームスタートとは
	マップ消す。

	得点＝０。
	押数＝０。
	処理可＝オン。

	１秒タイマー開始した時には（タイマーＩＤ）
		的移動。
	ここまで。

	１０秒後には
		結果ラベルに「ヒット{得点}回，はずれ{押数-得点}回，成功率{INT(得点/押数*100)}％でした。」をテキスト設定。
		ゲームエンド。
	ここまで。
ここまで。

// １０秒経った時と，ゲーム停止ボタンを押したときの処理
●ゲームエンドとは
	処理可＝オフ。
	全タイマー停止。
ここまで。

// 的を移動させる処理
●的移動とは
	TXとTYの的消す。

	(8の乱数)で条件分岐。   // ８方向へ移動させる
		0ならば、RDX= 0。RDY=-1。ここまで。
		1ならば、RDX= 1。RDY=-1。ここまで。
		2ならば、RDX= 1。RDY= 0。ここまで。
		3ならば、RDX= 1。RDY= 1。ここまで。
		4ならば、RDX= 0。RDY= 1。ここまで。
		5ならば、RDX=-1。RDY= 1。ここまで。
		6ならば、RDX=-1。RDY= 0。ここまで。
		違えば、 RDX=-1。RDY=-1。ここまで。
	ここまで。
	
	RD=((2の乱数)+1)*0.6。  // 移動量の0.6倍か1.2倍
	TX=TX+RDX*TMV*RD。
	もし、TX<TR*2ならば、   // はみ出した時の処理
		TX=TR*2。
	違えばもし、TX>(MX-TR*2)ならば、
		TX=(MX-TR*2)。
	ここまで。

	RD=((2の乱数)+1)*0.6。  // 移動量の0.6倍か1.2倍
	TY=TY+RDY*TMV*RD。
	もし、TY<TR*2ならば、   // はみ出した時の処理
		TY=TR*2。
	違えばもし、TY>(MY-TR*2)ならば、
		TY=(MY-TR*2)。
	ここまで。
	TXとTYに的描く。
ここまで。

// キャンバスをクリックした時の処理
Ｐをマウス押した時には
	もし、処理可＝オフならば、
		対象イベントのＤＯＭイベント処理停止。
		戻る。
	ここまで。

	// クリック位置(HX,HY)と，的の中心からの距離(Z)を取得
	HX=マウスX。HY=マウスY。
	ZX=(HX-TX)の絶対値。
	ZY=(HY-TY)の絶対値。
	Z=SQRT(ZX*ZX+ZY*ZY)。	// 距離
	押数＝押数＋１。

	// 当たり判定
	もし、Z<TRならば、
		// 的をクリックした時の処理
		HXとHYに赤色で位置描く。
		音OKを音再生。
		得点＝得点＋１。
		結果ラベルに「ヒット！{得点}回目」をテキスト設定。
		的移動。
	違えば、
		// 的以外をクリックした時の処理
		音NGを音再生。
		結果ラベルに「はずれ…」をテキスト設定。
	ここまで。
ここまで。

// 実行直後はマップを消しておく
マップ消す。
